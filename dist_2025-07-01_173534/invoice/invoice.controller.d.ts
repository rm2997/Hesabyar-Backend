import { InvoiceService } from './invoice.service';
import { Invoice } from './invoice.entity';
import { Request, Response } from 'express';
import { User } from 'src/users/users.entity';
import { PaymentTypes } from 'src/common/decorators/payment.enum';
export declare class InvoiceController {
    private readonly invoiceService;
    constructor(invoiceService: InvoiceService);
    create(data: Partial<Invoice>, req: Request): Promise<Invoice>;
    getAll(): Promise<Invoice[] | null>;
    generateNewToken(id: number): Promise<string | undefined>;
    setProformaIsAccepted(id: number, req: Request): Promise<{
        isAccepted: true;
        acceptedBy: User;
        id: number;
        title: string;
        isSent: boolean;
        updateAt: Date;
        sepidarId: string;
        proforma: import("../proforma/proforma.entity").Proforma;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        invoiceGoods: import("./invoice-good.entity").InvoiceGoods[];
        createdAt: Date;
        createdBy: User;
    } & Invoice>;
    setInvoiceIsSent(id: number): Promise<{
        isSent: true;
        id: number;
        title: string;
        isAccepted: boolean;
        acceptedBy: User;
        updateAt: Date;
        sepidarId: string;
        proforma: import("../proforma/proforma.entity").Proforma;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        invoiceGoods: import("./invoice-good.entity").InvoiceGoods[];
        createdAt: Date;
        createdBy: User;
    } & Invoice>;
    getProformaApprovedFile(id: number, res: Response): Promise<void>;
    viewInvoice(token: string): Promise<Invoice>;
    updateInvoiceByToken(token: string, image: Express.Multer.File): Promise<Invoice>;
    get(id: number): Promise<Invoice | null>;
    getUserInvoices(page: number | undefined, limit: number | undefined, search: string, req: Request): Promise<{
        total: number;
        items: Invoice[];
    }>;
    update(id: number, data: Partial<Invoice>, req: Request): Promise<Invoice>;
    delete(id: number): Promise<void>;
    getShareableLink(id: number): Promise<{
        link: string;
    }>;
}
