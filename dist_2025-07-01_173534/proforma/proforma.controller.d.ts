import { ProformaService } from './proforma.service';
import { Proforma } from './proforma.entity';
import { Request, Response } from 'express';
import { User } from 'src/users/users.entity';
export declare class ProformaController {
    private readonly proformaService;
    constructor(proformaService: ProformaService);
    create(data: Partial<Proforma>, req: Request): Promise<Proforma>;
    generateNewToken(id: number): Promise<string | undefined>;
    getProformaByToken(token: string): Promise<Proforma>;
    updateProfomaByToken(token: string, image: Express.Multer.File): Promise<Proforma>;
    setProformaIsAccepted(id: number, req: Request): Promise<{
        isAccepted: true;
        acceptedBy: User;
        id: number;
        title: string;
        isConverted: boolean;
        convertedBy: User;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: import("../common/decorators/payment.enum").PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        description: string;
        createdAt: Date;
        updatedAt: Date;
        sepidarId: string;
        isSent: boolean;
        proformaGoods: import("./proforma-goods.entity").ProformaGoods[];
        createdBy: User;
    } & Proforma>;
    setProformaIsSent(id: number): Promise<{
        isSent: true;
        id: number;
        title: string;
        isConverted: boolean;
        convertedBy: User;
        isAccepted: boolean;
        acceptedBy: User;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: import("../common/decorators/payment.enum").PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        description: string;
        createdAt: Date;
        updatedAt: Date;
        sepidarId: string;
        proformaGoods: import("./proforma-goods.entity").ProformaGoods[];
        createdBy: User;
    } & Proforma>;
    getProformaApprovedFile(id: number, res: Response): Promise<void>;
    getShareableLink(id: number): Promise<{
        link: string;
    }>;
    convert(id: number, req: Request): Promise<Proforma>;
    viewProforma(token: string): Promise<Proforma>;
    getByUserId(page: number | undefined, limit: number | undefined, search: string, req: Request): Promise<{
        items: Proforma[];
        total: number;
    }>;
    getAll(): Promise<Proforma[] | null>;
    get(id: number): Promise<Proforma | null>;
    update(id: number, data: Partial<Proforma>, req: Request): Promise<Proforma>;
    delete(id: number): Promise<void>;
}
