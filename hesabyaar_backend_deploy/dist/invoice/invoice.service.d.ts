import { DataSource, Repository } from 'typeorm';
import { Invoice } from './invoice.entity';
import { ProformaService } from '../proforma/proforma.service';
import { ConfigService } from '@nestjs/config';
import { PaymentTypes } from 'src/common/decorators/payment.enum';
import { User } from 'src/users/users.entity';
import { InvoiceGoods } from './invoice-good.entity';
export declare class InvoiceService {
    private invoiceRepository;
    private readonly proformaService;
    private invoiceGoodsRepository;
    private readonly dataSource;
    private readonly configService;
    constructor(invoiceRepository: Repository<Invoice>, proformaService: ProformaService, invoiceGoodsRepository: Repository<InvoiceGoods>, dataSource: DataSource, configService: ConfigService);
    createInvoice(data: Partial<Invoice>, user: User): Promise<Invoice>;
    getAllInvoices(): Promise<Invoice[] | null>;
    getInvoice(id: number): Promise<Invoice | null>;
    getUserInvoices(page: number, limit: number, search: string, userId: number): Promise<{
        total: number;
        items: Invoice[];
    }>;
    updateInvoice(id: number, data: Partial<Invoice>, updatedBy: User): Promise<Invoice>;
    deleteInvoice(id: number): Promise<void>;
    generateShareableLink(invoiceId: number): Promise<string>;
    verifyAndFetchInvoice(token: string): Promise<Invoice>;
    setInvoiceIsAccepted(id: number, acceptedBy: User): Promise<{
        isAccepted: true;
        acceptedBy: User;
        id: number;
        title: string;
        isSent: boolean;
        updateAt: Date;
        sepidarId: string;
        proforma: import("../proforma/proforma.entity").Proforma;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        invoiceGoods: InvoiceGoods[];
        createdAt: Date;
        createdBy: User;
    } & Invoice>;
    setInvoiceIsSent(id: number): Promise<{
        isSent: true;
        id: number;
        title: string;
        isAccepted: boolean;
        acceptedBy: User;
        updateAt: Date;
        sepidarId: string;
        proforma: import("../proforma/proforma.entity").Proforma;
        customer: import("../customer/customer.entity").Customer;
        totalAmount: number;
        paymentStatus: PaymentTypes;
        chequeDate: Date;
        chequeAmount: number;
        chequeSerial: number;
        paperMoneyDate: Date;
        paperMoneyAmount: number;
        paperMoneySerial: number;
        trustIssueDate: Date;
        approvedFile: string;
        customerLink: string;
        invoiceGoods: InvoiceGoods[];
        createdAt: Date;
        createdBy: User;
    } & Invoice>;
    renewInvoiceToken(invoiceId: number): Promise<string | undefined>;
}
